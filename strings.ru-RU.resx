<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dirExists" xml:space="preserve">
    <value>Директория {0}{1} существует, переписать?</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Информация</value>
  </data>
  <data name="longFileNameMsg" xml:space="preserve">
    <value>Длина пути должна быть меньше чем 260 символов. Введите новое имя. Текущая длина:</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Закрыть ALT+F4</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>F5 Копировать</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>F8 Удалить</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>F6 Переместить</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>F7 Каталог</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="ShowHidden" xml:space="preserve">
    <value>Скрытые файлы</value>
  </data>
  <data name="copyCanceled" xml:space="preserve">
    <value>Копирование отменено</value>
  </data>
  <data name="copyOnItself" xml:space="preserve">
    <value>Нельзя скопировать самого на себя!</value>
  </data>
  <data name="currentSize" xml:space="preserve">
    <value>Текущий размер:</value>
  </data>
  <data name="deleteAsk" xml:space="preserve">
    <value>Удадение</value>
  </data>
  <data name="enterFolderName" xml:space="preserve">
    <value>Введите имя каталога</value>
  </data>
  <data name="fileExists" xml:space="preserve">
    <value>{0} файл уже существует. Переписать?  Отмена для завершения</value>
  </data>
  <data name="fileNotExists" xml:space="preserve">
    <value>Файл не существует!</value>
  </data>
  <data name="filesDirs" xml:space="preserve">
    <value>файлов\\директорий?</value>
  </data>
  <data name="folderExists" xml:space="preserve">
    <value>Папка с таким именем уже существует!</value>
  </data>
  <data name="folderName" xml:space="preserve">
    <value>Имя каталога</value>
  </data>
  <data name="folderNameInvalid" xml:space="preserve">
    <value>Имя папки некорректное:</value>
  </data>
  <data name="from" xml:space="preserve">
    <value>Из: </value>
  </data>
  <data name="longFileNameMsgShort" xml:space="preserve">
    <value>Длина пути больше чем 260 символов. Файл: {0}.  Текущая длина {1}, Копирование отменено</value>
  </data>
  <data name="noFiles" xml:space="preserve">
    <value>Нет файлов для копирования</value>
  </data>
  <data name="notAllowDelete" xml:space="preserve">
    <value>Нельзя удалить [...]</value>
  </data>
  <data name="operationCanceled" xml:space="preserve">
    <value>Операция отменена</value>
  </data>
  <data name="pathTooLong" xml:space="preserve">
    <value>{0} Длина пути слишком длинная
Путь не должен превышать 248 символов
Эта папка не будет скопирована
текущая длина {1}</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Внимание</value>
  </data>
  <data name="copyInProgress" xml:space="preserve">
    <value>Есть незавершенные операции, Выйти все равно?</value>
  </data>
  <data name="noSelectedFiles" xml:space="preserve">
    <value>Нет выбранных файлов</value>
  </data>
  <data name="question" xml:space="preserve">
    <value>Вопрос</value>
  </data>
  <data name="accessdenied" xml:space="preserve">
    <value>Доступ к файлу запрещен!</value>
  </data>
  <data name="diskNotFound" xml:space="preserve">
    <value>Диск не найден!</value>
  </data>
  <data name="deleteCaption" xml:space="preserve">
    <value>Удаление</value>
  </data>
  <data name="FolderDefaultName" xml:space="preserve">
    <value>Каталог</value>
  </data>
  <data name="deleteConfirm" xml:space="preserve">
    <value>Удалить {0} файлы\директории {1} из {2}?</value>
  </data>
  <data name="DateColumn" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="FileColumn" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="SizeColumn" xml:space="preserve">
    <value>Размер</value>
  </data>
  <data name="TypeColumn" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CurrentProgress" xml:space="preserve">
    <value>Текущий прогресс</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Пауза</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Старт</value>
  </data>
  <data name="TotalProgress" xml:space="preserve">
    <value>Общий прогресс</value>
  </data>
  <data name="FromTo" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="ProgressCopyName" xml:space="preserve">
    <value>Копирование</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>Операция не совершена</value>
  </data>
  <data name="allOperationsComleted" xml:space="preserve">
    <value>Все операции завершены</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>В:  </value>
  </data>
  <data name="NewName" xml:space="preserve">
    <value>Введите новое имя:</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Переименование</value>
  </data>
  <data name="CopyMenu" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="DeleteMenu" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="OpenMenu" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="PasteMenu" xml:space="preserve">
    <value>Вставить</value>
  </data>
  <data name="RenameMenu" xml:space="preserve">
    <value>Переименовать</value>
  </data>
  <data name="AddTab" xml:space="preserve">
    <value>Добавить вкладку</value>
  </data>
  <data name="CutMenu" xml:space="preserve">
    <value>Вырезать</value>
  </data>
  <data name="DelTab" xml:space="preserve">
    <value>Удалить вкладку</value>
  </data>
</root>